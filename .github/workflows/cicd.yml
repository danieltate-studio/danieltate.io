name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Clean node_modules if integrity fails
        run: |
          if [ -f ./yarn.lock ] && [ -d ./node_modules ]; then
            yarn check --integrity || rm -rf ./node_modules
          fi

      - name: Restore local Yarn cache
        run: |
          mkdir -p ~/.cache/yarn
          [ -d /opt/yarn-cache ] && cp -r /opt/yarn-cache/* ~/.cache/yarn/ || true

      - name: Restore local node_modules cache
        run: |
          [ -d /opt/node-modules-cache ] && cp -r /opt/node-modules-cache ./node_modules || true

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Save local Yarn cache
        if: always()
        run: |
          mkdir -p /opt/yarn-cache
          cp -r ~/.cache/yarn/* /opt/yarn-cache/ || true

      - name: Save local node_modules cache
        if: always()
        run: |
          mkdir -p /opt/node-modules-cache
          cp -r ./node_modules /opt/node-modules-cache || true

      - name: Disable Docker keychain and inject login credentials
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: |
          mkdir -p ~/.docker
          echo '{"auths":{"https://index.docker.io/v1/":{"auth":"'"$(echo -n "$DOCKER_USERNAME:$DOCKER_TOKEN" | base64)"'"}},"credsStore":""}' > ~/.docker/config.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:buildx-stable-1

      - name: Build and push Docker image (with local cache)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/personal-website:latest
          cache-from: type=local,src=/opt/docker-cache
          cache-to: type=local,dest=/opt/docker-cache,mode=max
          provenance: false

      - name: Done
        run: |
          echo "======================================"
          echo "‚úÖ CI/CD pipeline completed successfully!"
          echo "üì¶ Image pushed: ${{ secrets.DOCKER_USERNAME }}/personal-website:latest"
          echo "üïµÔ∏è‚Äç‚ôÇÔ∏è Watchtower should have already triggered container reload"
          echo "======================================"    